apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}
  labels:
    chart: '{{ .Release.Name }}-{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
    implementation: microprofile
spec:
  type: {{ .Values.service.type }}
  ports:
  - name: http
    port: {{ .Values.service.servicePort }}
  - name: https
    port: {{ .Values.service.servicePortHttps }}
  selector:
    app: bluecompute
    micro: orders
    service: server
    implementation: microprofile
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}
  labels:
    app: bluecompute
    micro: orders
    service: server
    tier: backend
    implementation: microprofile
    chart: '{{ .Release.Name }}-{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: bluecompute
        micro: orders
        service: server
        tier: backend
        implementation: microprofile
    spec:
      containers:
      # Liberty Server Container
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        readinessProbe:
          httpGet:
            path: /
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 1500
          timeoutSeconds: 500
          
        env:
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: RELEASE_NAME
            value: "{{ .Release.Name }}"
          - name: jwtid
            value: "{{ .Values.jwt.id }}"
          - name: jwksUri
            value: "https://{{ .Release.Name }}-{{ .Values.service.auth }}:9443/oidc/endpoint/OP/jwk"
          - name: jwksIssuer
            value: "https://{{ .Release.Name }}-{{ .Values.service.auth }}:9443/oidc/endpoint/OP"
          - name: jdbcURL
            value: "jdbc:mysql://{{ .Release.Name }}-{{ .Values.service.ordersdb }}:3306/ordersdb?useSSL=false"
          - name: inventory_url
            value: "http://{{ .Release.Name }}-{{ .Values.service.inventory }}:9080/inventory/rest/inv/stock"
          - name: inventory_health
            value: "http://{{ .Release.Name }}-{{ .Values.service.inventory }}:9080/health"
          - name: rabbit
            value: "{{ .Release.Name }}-{{ .Values.service.rabbitmq }}"
          - name: auth_health
            value: "https://{{ .Release.Name }}-{{ .Values.service.auth }}:9443/health"

        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        volumeMounts:
        - name: keystorevol
          mountPath: "/etc/keystorevol"
          readOnly: true
      volumes:
      - name: keystorevol
        secret:
          secretName: keystoresecret
